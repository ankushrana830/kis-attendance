components:
  schemas:
    User:
      type: array
      properties:
        id:
          type: string
        emp_id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        password:
          type: string       
        phone:
          type: string
        doj:
          type: date
        designation:
          type: string
        status:
          type: boolean
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        emp_id: "12345"
        email: fake@example.com
        name: fake name
        phone: 09876543210
        doj: 2021-07-07
        designation: dev
        status: false
        role: {
        id: 5ebac534954b54139806c113,
        role: Employee
        }

    Attendence:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        entry_date:
          type: date
        check_in:
          type: date
        on_leave:
          type: boolean       
        breaks:
          type: array
          enum: [lunch,tea,emergency]
        check_out:
          type: date
      example:
        id: 5ebac534954b54139806c112
        user_id: "5ebac534954b54139806c113"
        entry_date: Mon Jul 12 2021 12:32:37 GMT+0530 (India Standard Time)
        check_in: Mon Jul 12 2021 12:32:37 GMT+0530 (India Standard Time)
        on_leave: false
        breaks: [ {start: "Mon Jul 12 2021 12:32:37 GMT+0530 (India Standard Time)", end: "Mon Jul 12 2021 12:32:37 GMT+0530 (India Standard Time)", reason: "any"}]
        check_out: Mon Jul 12 2021 12:32:37 GMT+0530 (India Standard Time)

    Important_Dates:
      type: object
      properties:
        id:
          type: string
        event:
          type: string
        date:
          type: date
      example:
        id: 5ebac534954b54139806c112
        event: "Gandhi Jayanti"
        entry_date: Mon Oct 2 2021 12:32:37 GMT+0530 (India Standard Time)

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
